@{
    Layout = "~/Views/Shared/_AdminTemplate.cshtml";
}

<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-target="#exampleModal" id="AddBlog">
    Add New Blog
</button>
<label class="BlogStatus">
    <input type="checkbox" id="switchCheckbox">
    <span class="BlogStatusSlider round"></span>
</label>

<!-- Modal -->
<div class="modal" id="AddNewBlogModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Add New Blog</h5>
            </div>
            <div class="modal-body">
                <form name="BlogDetails">
                    <input type="hidden" class="form-control" id="BlogId">
                    <input type="hidden" class="form-control" id="ImageUrl">
                    <input type="hidden" class="form-control" id="BlogDetailImageUrl">
                    <div class="form-group">
                        <label for="Title">Title</label>
                        <input type="text" class="form-control" id="Title" name="title" placeholder="Title">
                    </div>
                    <div class="form-group">
                        <label for="Description">Description</label>
                        <div id="toolbar-container">
                            <span class="ql-formats">
                                <select class="ql-font"></select>
                                <select class="ql-size"></select>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-bold"></button>
                                <button class="ql-italic"></button>
                                <button class="ql-underline"></button>
                                <button class="ql-strike"></button>
                            </span>
                            <span class="ql-formats">
                                <select class="ql-color"></select>
                                <select class="ql-background"></select>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-script" value="sub"></button>
                                <button class="ql-script" value="super"></button>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-header" value="1"></button>
                                <button class="ql-header" value="2"></button>
                                <button class="ql-blockquote"></button>
                                <button class="ql-code-block"></button>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-list" value="ordered"></button>
                                <button class="ql-list" value="bullet"></button>
                                <button class="ql-indent" value="-1"></button>
                                <button class="ql-indent" value="+1"></button>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-direction" value="rtl"></button>
                                <select class="ql-align"></select>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-link"></button>
                                <button class="ql-image"></button>
                                <button class="ql-video"></button>
                                <button class="ql-formula"></button>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-clean"></button>
                            </span>
                        </div>
                        <div id="editor" style="height:250px;">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="ShortTitle">Short Title</label>
                        <input type="text" class="form-control" id="ShortTitle" name="ShortTitle" placeholder="Title">
                    </div>
                    <div class="form-group">
                        <label for="BlogType">Blog Type</label>
                        <input type="text" class="form-control" id="BlogType" name="blogtype" placeholder="Blog Type">
                    </div>
                    <div class="form-group">
                        <label for="Image">Thumbnail Image</label>
                        <input id="Image" type="file" class="form-control" name="attachmentFile" />
                        <div id="preview"></div>
                    </div>
                    <div class="form-group">
                        <label for="Image">Banner Image</label>
                        <input id="BlogDetailsImage" type="file" class="form-control" name="BlogDetailsImage" />
                        <div id="BlogDetailImagepreview"></div>
                    </div>
                    <div class="form-group">
                        <label for="Date">Posting Date</label>
                        <input type="text" class="form-control" id="PostingDate" disabled>
                    </div>
                    <div class="form-group">
                        <label for="PostedBy">Posted By</label>
                        <input type="text" class="form-control" id="PostedBy" name="PostedBy" placeholder="Posted By">
                    </div>
                    <div class="form-group">
                        <label for="PageUrl">PageUrl</label>
                        <input type="text" class="form-control" id="PageUrl" name="PageUrl" placeholder="Page Url" />
                    </div>
                    <div class="form-group">
                        <label for="MetaTitle">Meta Title</label>
                        <input type="text" class="form-control" id="MetaTitle" name="MetaTitle" placeholder="Meta Title" />
                    </div>
                    <div class="form-group">
                        <label for="MetaDescription">Meta Description</label>
                        <textarea class="form-control" id="MetaDescription" name="MetaDescription" placeholder="Meta Description"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="SchemaCode">Schema Code</label>
                        <textarea class="form-control" id="SchemaCode" name="SchemaCode" placeholder="Schema Code" rows="5"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="FaqQuestion">Add FAQ Questions</label><br />
                        <button type="button" class="btn btn-dark btn-sm" id="newrows" onclick="AddNewRows('','')"><b>Add Questions</b></button>
                        <div style="padding-top:10px;" class="table-responsive-sm">
                            <table class="table table-bordered" id="tblFaqs">
                                <thead>
                                    <tr>
                                        <th>Add Question</th>
                                        <th>Add Answer</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody class="FaqTableclass">
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" onclick="ResetBlogData()">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>

<div class="table-responsive pt-3">
    <table id="BlogList" class="table table-bordered table-responsive">
        <thead>
            <tr>
                <th> Title </th>
                <th> Blog Type </th>
                <th> PostingDate </th>
                <th> PostBy </th>
                <th></th>
                <th></th>
            </tr>
        </thead>
    </table>
</div>

<script type="text/javascript">

    // init quill editor.
    const quill = new Quill('#editor', {
        modules: {
            syntax: true,
            toolbar: '#toolbar-container',
        },
        placeholder: 'Compose an epic...',
        theme: 'snow',
    });

    var validator;
    $(function () {
         validator = $("form[name='BlogDetails']").validate({
            rules: {
                title: { required: true, },
                description: { required: true, },
                ShortTitle: {
                    required: true,
                    maxlength: 30,
                },
                blogtype: { required: true, },
                attachmentFile: { required: true, },
                PostedBy: { required: true, },
                PageUrl: { required: true },
                MetaTitle: { required: true },
                MetaDescription: { required: true },
                SchemaCode: {required:true}
            },
            messages: {
                title: { required: "Please enter a title", },
                description: { required: "Please enter description", },
                ShortTitle: {
                    required: "Please enter short title",
                    maxlength: "Title must be less than 30 characters..",
                },
                blogtype: { required: "Please enter blogtype", },
                attachmentFile: { required: "Please choose a file", },
                PostedBy: { required: "Please enter PostedBy", },
                PageUrl: { required: "Please enter Url", },
                MetaTitle: { required: "Please enter Meta Title", },
                MetaDescription: { required: "Please enter Meta Description", },
                SchemaCode: { required: "Please enter Schema Code", }
            },
            submitHandler: function (form) {
                SaveBlog()
            }
        });

        //var Postingdate = new Date();
        //var FormatPostingDate = moment(Postingdate).format('MM/DD/YYYY HH:mm:ss');
        //var FormatPostingDate = (new Date()).toISOString().split('T')[0];
        //$("#PostingDate").val(FormatPostingDate);

        GetBlogStatusByName();
        GetBlogList();
    });

    $('#AddBlog').click(function () {
        var Postingdate = new Date();
        var FormatPostingDate = moment(Postingdate).format('MM/DD/YYYY HH:mm:ss');
        //var FormatPostingDate = (new Date()).toISOString().split('T')[0];
        $("#PostingDate").val(FormatPostingDate);
        $("#AddNewBlogModal").modal('show');
    });

    function SaveBlog() {
        var Blogs = new Array();
        $("#tblFaqs tbody tr").each(function () {
            var row = $(this);
            var Blog = {};
            Blog.Questions = row.find(".clsfaqQuestion").val();
            Blog.Answers = row.find(".clsfaqAnswers").val();
            Blogs.push(Blog);
        });

        var Id = $("#BlogId").val();
        var Title = $("#Title").val();
        var ShortTitle = $('#ShortTitle').val();
        //var Description = CKEDITOR.instances['Description'].getData();
        var Description = quill.root.innerHTML;
        var BlogType = $("#BlogType").val();
        var PostingDate = $("#PostingDate").val();
        var Resume = $("#Image").get(0);
        var files = Resume.files;

        var BlogDetailImage = $("#BlogDetailsImage").get(0);
        var BlogFile = BlogDetailImage.files;

        var PostedBy = $("#PostedBy").val();
        var ImageUrl = $("#ImageUrl").val();
        var PageUrl = $("#PageUrl").val();
        var MetaTitle = $("#MetaTitle").val();
        var MetaDescription = $("#MetaDescription").val();
        var SchemaCode = $("#SchemaCode").val();
        var BlogDetailUrl = $("#BlogDetailImageUrl").val();

        var fileData = new FormData();
        fileData.append("Id",Id);
        fileData.append("Image", files[0]);
        fileData.append('Description', Description);
        fileData.append('ShortTitle', ShortTitle);
        fileData.append('BlogType', BlogType);
        fileData.append('PostingDate', PostingDate);
        fileData.append('PostedBy', PostedBy);
        fileData.append('Title', Title);
        fileData.append('ImageUrl', ImageUrl);
        fileData.append('BlogDetailImage', BlogFile[0]);
        fileData.append('PageUrl', PageUrl);
        fileData.append('MetaTitle', MetaTitle);
        fileData.append('MetaDescription', MetaDescription);
        fileData.append('SchemaCode', SchemaCode);
        fileData.append('BlogDetailImageUrl', BlogDetailUrl);
        fileData.append('BlogFaqs', JSON.stringify(Blogs));

        $.ajax({
            type: "POST",
            url: "/api/Admin/SaveBlog",
            data: fileData,
            cache: false,
            contentType: false,
            processData: false,
            success: function (result) {
                alert("success");
                GetBlogList();
                ResetBlogData();
                $("#AddNewBlogModal").modal('hide');
            },
            error: function (result) {
                alert(result.responseText);
            }
        });
    }

    function GetBlogList() {
        $.ajax({
            type: "Get",
             url: "@Url.Action("GetBlogList", "BlogVacancy")",
            success: function (result) {
                $('#BlogList').dataTable({
                    destroy: true,
                    data: result,
                    "columns": [
                        {
                            "data": "Title",
                            "render": function (data, type, row) {
                                var reviewName = data.length > 35 ? data.substring(0, 35) + "..." : data;
                                return "<span title='" + data + "'>" + reviewName + "</span>";
                            }
                        },
                        {"data": "BlogType"},
                        {
                            "data": "PostingDate",
                            "render": function (data) {
                                const dateValue = new Date(parseInt(data.substr(6)));
                                return moment(dateValue).format('DD/MM/YYYY HH:mm');
                            }
                        },
                        { "data": "PostedBy" },
                        {
                            "data": "Id",
                            "render": function (data, type, row) {
                                return '<a class="btn btn-info btn-sm" style="color: white;" onclick="GetBlogDetailsById(' + data + ')"><i class="mdi mdi-pencil"></i></a>';
                            }
                        },
                        {
                            "data": "Id",
                            "render": function (data, type, row) {
                                return '<a class="btn btn-danger btn-sm" style="color: white;" onclick=DeleteBlog(' +data +')><i class="mdi mdi-delete"></i></a>';
                            }
                        }
                    ]
                });


            },
            error: function (result) {
                alert(result.responseText);
            }
        });
    }

    function DeleteBlog(id) {
        if (confirm('Are you sure want to delete Blog?')) {
            $.ajax({
                url: '@Url.Action("DeleteBlog", "BlogVacancy")',
                contentType: 'application/json',
                data: { Id: id },
                type: "GET",
                success: function (result) {
                    GetBlogList();
                    alert('Delete Successully!');

                },
                error: function (result) {
                    alert(result.responseText);
                }
            });
        }
        else {
            return;
        }
    }

    function GetBlogDetailsById(id) {
        $("#AddNewBlogModal").modal('show');
        $.ajax({
            url: '@Url.Action("GetBlogById", "BlogVacancy")',
            contentType: 'application/json',
            data: { Id: id },
            type: "GET",
            success: function (result) {
                $("#BlogId").val(result.bloglist[0].Id);
                $("#Title").val(result.bloglist[0].Title);
                //CKEDITOR.instances['Description'].setData(result.bloglist[0].Description);
                quill.root.innerHTML = result.bloglist[0].Description;

                $("#ShortTitle").val(result.bloglist[0].ShortTitle);
                $("#BlogType").val(result.bloglist[0].BlogType);
                loadURLToInputFiled(result.bloglist[0].ImageName);
                $("#preview").find("span").first().remove();
                $('#preview').show();
                var span = document.createElement('span');
                span.innerHTML =
                    ['<img class="thumb" src="', result.bloglist[0].Image, '"/><span class="remove_img_preview"></span>']
                        .join('');
                document.getElementById('preview').insertBefore(span, null);
                var date = moment(result.bloglist[0].PostingDate).format('MM/DD/YYYY HH:mm:ss');
                $("#PostingDate").val(date);
                $("#PostedBy").val(result.bloglist[0].PostedBy);
                $("#ImageUrl").val(result.bloglist[0].Image);
                $("#PageUrl").val(result.bloglist[0].PageUrl);
                $("#BlogDetailImageUrl").val(result.bloglist[0].BlogDetailImage);
                $("#MetaTitle").val(result.bloglist[0].MetaTitle);
                $("#MetaDescription").val(result.bloglist[0].MetaDescription);
                $("#SchemaCode").val(result.bloglist[0].SchemaCode);
                $("#BlogDetailImagepreview").find("span").first().remove();
                $('#BlogDetailImagepreview').show();
                var span = document.createElement('span');
                span.innerHTML =
                    ['<img class="BlogImage" src="', result.bloglist[0].BlogDetailImage, '"/><span class="remove_BlogDetailimg_preview"></span>']
                        .join('');
                document.getElementById('BlogDetailImagepreview').insertBefore(span, null);
                addNameToFile(result.bloglist[0].BlogDetailImageName);

                $.each(result.blogfaqslist, function (key, val) {
                    AddNewRows(val.Questions, val.Answers);
                });
            },
            error: function (result) {
                alert(result.responseText);
            }
        });
    }


    function loadURLToInputFiled(url) {
        getImgURL(url, (imgBlob) => {
            let file = new File([imgBlob], url, { type: "image/jpeg", lastModified: new Date().getTime() }, 'utf-8');
            let container = new DataTransfer();
            container.items.add(file);
            document.querySelector('#Image').files = container.files;
        })
    }

    function addNameToFile(url) {
        getImgURL(url, (imgBlob) => {
            let file = new File([imgBlob], url, { type: "image/jpeg", lastModified: new Date().getTime() }, 'utf-8');
            let container = new DataTransfer();
            container.items.add(file);
            document.querySelector('#BlogDetailsImage').files = container.files;
        })
    }

    function getImgURL(url, callback) {
        var xhr = new XMLHttpRequest();
        xhr.onload = function () {
            callback(xhr.response);
        };
        xhr.open('GET', url);
        xhr.responseType = 'blob';
        xhr.send();
    }

    function ResetBlogData() {
        validator.resetForm();
        $("#AddNewBlogModal").modal('hide');
        $("#BlogId").val('');
        $("#ShortTitle").val('');
        $("#Title").val('');
        quill.setText();
        $("#BlogType").val('');
        $("#PostingDate").val('');
        $(".thumb").attr('src', '');
        $('#preview').hide();
        $("#Image").val('');
        $("#BlogDetailsImage").val('');
        $("#PostedBy").val('');
        $("#ImageUrl").val('');
        $("#PageUrl").val('');
        $("#tblFaqs .FaqTableclass").html("");
        $("#MetaDescription").val("");
        $("#MetaTitle").val("");
        $(".BlogImage").attr('src', '');
        $("#BlogDetailImagepreview").hide()
        $("#BlogDetailImageUrl").val("");
        $("#SchemaCode").val("");
        console.clear();
    }

    function handleFileSelect(event) {
        console.log(event)
        $("#ImageUrl").val('');
        var input = this;
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            console.log(reader)
            reader.onload = (function (e) {
                $("#preview").find("span").first().remove();
                $('#preview').show();
                var span = document.createElement('span');
                span.innerHTML =
                    ['<img class="thumb" src="', e.target.result, '" title="', escape(e.name), '"/><span class="remove_img_preview"></span>']
                        .join('');
                document.getElementById('preview').insertBefore(span, null);
            });

            reader.readAsDataURL(input.files[0]);
        }
    }

    $('#Image').change(handleFileSelect);
    $('#preview').on('click', '.remove_img_preview', function () {
        $(this).parent('span').remove();
        $(this).val("");
        $("#Image").val("");
    });
    $('.BlogStatus input[type="checkbox"]').on('change', function () {
        var status = $("#switchCheckbox").is(':checked');
        var menu = {
            MenuName: "blog",
            Status: status
        }
        $.ajax({
            type: "POST",
                url: '@Url.Action("BlogStatus", "BlogVacancy")',
             contentType: 'application/json',
             data: JSON.stringify(menu),
                success: function (result) {
                    alert('Status Update Successully!');

                },
                error: function () {
                    alert(result.responseText);
                }
            });
    });
    function GetBlogStatusByName() {
         $.ajax({
            url: '@Url.Action("GetBlogStatusByName", "BlogVacancy")',
            contentType: 'application/json',
             data: { name: "blog" },
            type: "GET",
             success: function (result) {
                if (result != null) {
                    if (result.Status) {
                        $("#switchCheckbox").prop("checked", true);
                    }
                }

            },
            error: function (result) {
                alert(result.responseText);
            }
        });
    }

    var count = 1;
    function AddNewRows(Questions,Answers) {
        var addcontrols = '<tr id="RowId_' +count+ '>" + count + ">'
        addcontrols += '<td><textarea type="text" class="form-control clsfaqQuestion" name="faqTitle" placeholder="Add question">' + Questions +'</textarea></td>'
        addcontrols += '<td><textarea type="text" class="form-control clsfaqAnswers" name="faqTitle" placeholder="Add answer"/>'+Answers+'</textarea></td>'
        addcontrols += "<td><input type='button' id='btnDelete' class='btn btn-danger btn-sm deleteFaqquestion' Value='Delete'></td>"
        addcontrols += "</tr>";
        count++;
        $("table .FaqTableclass").append(addcontrols);
    }
    $("table .FaqTableclass").on('click', '.deleteFaqquestion', function () {
        $(this).closest('tr').remove();
    });


    $("#BlogDetailsImage").change(AddBogDetailImage);
    function AddBogDetailImage(event) {
        $("#BlogDetailImageUrl").val("");
        var input = this;
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            console.log(reader)
            reader.onload = (function (e) {
                $("#BlogDetailImagepreview").find("span").first().remove();
                $('#BlogDetailImagepreview').show();
                var span = document.createElement('span');
                span.innerHTML =
                    ['<img class="BlogImage" src="', e.target.result, '" title="', escape(e.name), '"/><span class="remove_BlogDetailimg_preview"></span>']
                        .join('');
                document.getElementById('BlogDetailImagepreview').insertBefore(span, null);
            });

            reader.readAsDataURL(input.files[0]);
        }
    }
    $('#BlogDetailImagepreview').on('click', '.remove_BlogDetailimg_preview', function () {
        $(this).parent('span').remove();
        $(this).val("");
        $("#BlogDetailsImage").val("");
    });
</script>