
@{
    Layout = "~/Views/Shared/_LeaveTemplate.cshtml";
}

<h4>Current Year Leave Used</h4>
<table id="TotalLeaveTable">
    <thead>
        <tr>
            @*<th>FromDate</th>*@
            <th style="width: 263px;" class="dt-head-center">Dates</th>
            <th style="width: 130px;" class="dt-head-center">Sick Leave (SL)</th>
            <th style="width: 175px;" class="dt-head-center">Personal Leave (PL)</th>
            <th style="width: 216px;" class="dt-head-center">Leave Without Pay (LWP)</th>
            <th style="width: 203px;" class="dt-head-center">Reason For Leave</th>
        </tr>
    </thead>
    <tbody class="TotalLeaveTableBody" style="text-align: center;">
    </tbody>
</table>

<hr />

<h4>Total Leave Balance Remaining</h4>
<table id="TotalLeaveBalanceTable">
    <thead>
        <tr>
            <th class="dt-head-center">Sick Leave</th>
            <th class="dt-head-center">Personal Leave</th>
        </tr>
    </thead>
    <tbody class="TotalLeaveBalanceTableBody" style="text-align: center;">
    </tbody>
</table>

<hr />

@*<h4>Past Leave Balanace</h4>
    <table id="PastLeaveBalanceTable">
        <thead>
            <tr>
                <th>SickLeave</th>
                <th>Personal Leave</th>
            </tr>
        </thead>
        <tbody class="PastLeaveBalanceTableBody">
        </tbody>
    </table>*@

<input type="hidden" id="PersonalLeave" />
<input type="hidden" id="SickLeave" />
<input id="JoiningDate" type="hidden" value='@Session["UserJoiningDate"]' />
<input id="ProbationMonth" type="hidden" value='@Session["UserProbationPeriod"]' />

<script>
    $(function () {
        GetPastLeaveBalance();
        GetTotalCurrentYearLeave();
        GetTotalLeaveBalance();

    });

    function GetTotalCurrentYearLeave() {
         $.ajax({
            url: "@Url.Action("GetTotalLeaveList", "Leave")",
            contentType: 'application/json',
             type: "GET",
            success: function (data) {
                $('#TotalLeaveTable').DataTable({
                    destroy: true,
                    data: data,
                    order: [[0, 'asc']],
                    "columns": [
                        //{
                        //    "data": "Fromdate",
                        //    "render": function (data) {
                        //       var date = moment(data).format('YYYY-MM-DD');
                        //       return "<span>" + date + "</span>"


                        //    }
                        //},
                        //{
                        //    "data": "Todate",
                        //    "render": function (data) {
                        //        return moment(data).format('YYYY-MM-DD');
                        //    }
                        //},
                        {
                            "data": null,
                            "render": function (data, type, full, meta) {
                                return moment(full["Fromdate"]).format('DD/MM/YYYY') + " - " + moment(full["Todate"]).format('DD/MM/YYYY');
                            }
                        },
                        {
                            "data": "SickLeave",
                            "render": function (data, type, row) {
                                if (data == null) {
                                    return "<span>0.0</span>";
                                }
                                else {
                                    return "<span>" + data + "</span>"
                                }

                            }
                        },
                        {
                            "data": "PersonalLeave",
                            "render": function (data, type, row) {
                                if (data == null) {
                                    return "<span>0.0</span>";
                                }
                                else {
                                    return "<span>" + data + "</span>"
                                }

                            }
                        },
                        {
                            "data": "LwpLeave",
                            "render": function (data, type, row) {
                                if (data == null) {
                                    return "<span>0.0</span>";
                                }
                                else {
                                    return "<span>" + data + "</span>"
                                }

                            }
                        },
                        {
                            "data": "LeaveReason"
                        }
                    ]
                });
            },
            error: function (result) {
                alert(result.responseText);
            }
        });
    }

    function GetMonthName(monthNumber) {
        var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
        return months[monthNumber - 1];
    }

    function GetTotalLeaveBalance() {
        $.ajax({
            url: "@Url.Action("GetTotalLeaveBalanaceList", "Leave")",
            contentType: 'application/json',
             type: "GET",
            success: function (data) {
                $('#TotalLeaveBalanceTable').DataTable({
                    destroy: true,
                    data: data,
                    searching: false,
                    paging: false,
                    info: false ,
                    order: [[0, 'desc']],
                    "columns": [
                        {
                            "data": "SickLeave",
                            "render": function (data, type, row) {

                                var SickLeave = TotalSickLeaveCount(data);
                                return "<span>" + SickLeave + "</span>"

                            }
                        },
                        {
                            "data": "PersonalLeave",
                            "render": function (data, type, row) {

                                var personalLeave = TotalPersonalLeaveCount(data);
                                return "<span>" + personalLeave + "</span>"

                            }
                        }
                    ]
                });
            },
            error: function (result) {
                alert(result.responseText);
            }
        });
    }

     function GetPastLeaveBalance() {
        $.ajax({
            url: "@Url.Action("GetTotalPastBalanaceList", "Leave")",
            contentType: 'application/json',
             type: "GET",
            success: function (data) {
                if (data.length > 0) {
                    $("#PersonalLeave").val(data[0].PersonalLeave);
                    $("#SickLeave").val(data[0].SickLeave);
                }
            },
            error: function (result) {
                alert(result.responseText);
            }
        });
    }

    function TotalSickLeaveCount(sickleave) {

        var getJoiningDate = $('#JoiningDate').val();
        getJoiningDate = new Date(getJoiningDate);
        var getProbationMonth = $('#ProbationMonth').val();
        getProbationMonth = parseInt(getProbationMonth)

        var CurrentDate = new Date();
        var CurrentYear = CurrentDate.getFullYear();

        var months = CurrentDate.getMonth() - getJoiningDate.getMonth() +
            (12 * (CurrentDate.getFullYear() - getJoiningDate.getFullYear()))

        var MonthlySickLeave;
        if (months >= getProbationMonth) {
            var JoiningDateAfterProbation = new Date(getJoiningDate.setMonth(getJoiningDate.getMonth() + getProbationMonth));
            var JoiningYear = JoiningDateAfterProbation.getFullYear();
            if (JoiningYear == CurrentYear) {
                months = (CurrentDate.getMonth() - JoiningDateAfterProbation.getMonth() + 1) +
                    (12 * (CurrentDate.getFullYear() - getJoiningDate.getFullYear()))
                MonthlySickLeave = months / 2 - sickleave;
                if (MonthlySickLeave < 0) {
                    MonthlySickLeave = 0;
                }
                return MonthlySickLeave;
            }

            var Pastsickleave = $("#SickLeave").val();
            if (Pastsickleave == '') {
                Pastsickleave = 0.0;
            }

            var CurrentMonth = CurrentDate.getMonth() + 1;
            MonthlySickLeave = CurrentMonth / 2;
            MonthlySickLeave = (MonthlySickLeave - sickleave) + parseFloat(Pastsickleave);
            if (MonthlySickLeave < 0) {
                MonthlySickLeave = 0;
            }
        }
        else {
            MonthlySickLeave = 0.0;
        }
        return MonthlySickLeave;
    }

    function TotalPersonalLeaveCount(personalLeave) {
        var getJoiningDate = $('#JoiningDate').val();
        getJoiningDate = new Date(getJoiningDate);
        var getProbationMonth = $('#ProbationMonth').val();
        getProbationMonth = parseInt(getProbationMonth)

        var CurrentDate = new Date();
        var CurrentYear = CurrentDate.getFullYear();

        var months = CurrentDate.getMonth() - getJoiningDate.getMonth() +
            (12 * (CurrentDate.getFullYear() - getJoiningDate.getFullYear()))

        var TotalPersonalLeave;
        if (months >= getProbationMonth) {
            var JoiningDateAfterProbation = new Date(getJoiningDate.setMonth(getJoiningDate.getMonth() + getProbationMonth));
            var JoiningYear = JoiningDateAfterProbation.getFullYear();
            if (JoiningYear == CurrentYear) {
                months = (CurrentDate.getMonth() - JoiningDateAfterProbation.getMonth() + 1) +
                    (12 * (CurrentDate.getFullYear() - getJoiningDate.getFullYear()))
                TotalPersonalLeave = months - personalLeave;
                if (TotalPersonalLeave < 0 && TotalPersonalLeave != -0.5) {
                    TotalPersonalLeave = 0;
                } else {
                    TotalPersonalLeave = TotalPersonalLeave;
                }
                return TotalPersonalLeave;
            }


            var Pastpersonalleave = $("#PersonalLeave").val();
            if (Pastpersonalleave == '') {
                Pastpersonalleave = 0.0;
            }

            var CurrentDate = new Date();
            var CurrentMonth = CurrentDate.getMonth() + 1;
            TotalPersonalLeave = parseFloat(Pastpersonalleave) + (CurrentMonth - personalLeave)
            if (TotalPersonalLeave < 0 && TotalPersonalLeave != -0.5) {
                TotalPersonalLeave = 0;
            } else if (TotalPersonalLeave == -0.5) {
                TotalPersonalLeave = 0.5;
            }
        }
        else {
            TotalPersonalLeave = 0.0;
        }

        return TotalPersonalLeave;
    }
</script>