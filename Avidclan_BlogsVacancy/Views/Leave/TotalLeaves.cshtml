
@{
    Layout = "~/Views/Shared/_LeaveTemplate.cshtml";
}

<h4>Current Year Leave Used</h4>
<table id="TotalLeaveTable">
    <thead>
        <tr>
            @*<th>FromDate</th>*@
            <th style="width: 263px;" class="dt-head-center">Dates</th>
            <th style="width: 130px;" class="dt-head-center">Sick Leave (SL)</th>
            <th style="width: 175px;" class="dt-head-center">Paid Leave (PL)</th>
            <th style="width: 216px;" class="dt-head-center">Leave Without Pay (LWP)</th>
            <th style="width: 203px;" class="dt-head-center">Reason For Leave</th>
        </tr>
    </thead>
    <tbody class="TotalLeaveTableBody" style="text-align: center;">
    </tbody>
</table>

<hr />

<h4>Total Leave Balance Remaining</h4>
<table id="TotalLeaveBalanceTable">
    <thead>
        <tr>
            <th class="dt-head-center">Sick Leave</th>
            <th class="dt-head-center">Paid Leave</th>
        </tr>
    </thead>
    <tbody class="TotalLeaveBalanceTableBody" style="text-align: center;">
    </tbody>
</table>

<hr />


<input type="hidden" id="PersonalLeave" />
<input type="hidden" id="SickLeave" />
<input id="JoiningDate" type="hidden" value='@Session["UserJoiningDate"]' />
<input id="ProbationMonth" type="hidden" value='@Session["UserProbationPeriod"]' />

<script>
    $(function () {
        showSpinner();

        // Wrap setTimeout in a promise
        function delay(time) {
            return new Promise(function (resolve) {
                setTimeout(resolve, time);
            });
        }

        $.when(
            //GetPastLeaveBalance(),
            GetTotalCurrentYearLeave(),
            GetLeaveBalance()
        ).done(function () {
            hideSpinner();
        }).fail(function () {
            hideSpinner(); // Hide spinner even if there's an error
        });
    });


   function GetTotalCurrentYearLeave() {
    $.ajax({
        url: '@Url.Action("GetTotalLeaveList", "Leave")',
        contentType: 'application/json',
        type: "GET",
        success: function (data) {
            $('#TotalLeaveTable').DataTable({
                destroy: true,
                data: data,
                order: [[0, 'asc']], // Ascending order on the first column (Dates)
                "columns": [
                    {
                        "data": null,
                        "render": function (data, type, full, meta) {
                            // Format dates for display
                            var fromDateFormatted = moment(full["Fromdate"]).format('DD/MM/YYYY');
                            var toDateFormatted = moment(full["Todate"]).format('DD/MM/YYYY');

                            // Create a hidden value for sorting by formatting the dates as YYYYMMDD
                            var fromDateSortable = moment(full["Fromdate"]).format('YYYYMMDD');
                            var toDateSortable = moment(full["Todate"]).format('YYYYMMDD');

                            // Return the date range with hidden sortable values
                            return '<span style="display:none;">' + fromDateSortable + toDateSortable + '</span>' +
                                   fromDateFormatted + " - " + toDateFormatted;
                        }
                    },
                    {
                        "data": "SickLeave",
                        "render": function (data, type, row) {
                            return data == null ? "<span>0.0</span>" : "<span>" + data + "</span>";
                        }
                    },
                    {
                        "data": "PersonalLeave",
                        "render": function (data, type, row) {
                            return data == null ? "<span>0.0</span>" : "<span>" + data + "</span>";
                        }
                    },
                    {
                        "data": "LwpLeave",
                        "render": function (data, type, row) {
                            return data == null ? "<span>0.0</span>" : "<span>" + data + "</span>";
                        }
                    },
                    {
                        "data": "LeaveReason",
                        "render": function (data, type, row) {
                            var leaveReason = data.length > 40 ? data.substring(0, 40) + "..." : data;
                            return "<span title='" + data + "'>" + leaveReason + "</span>";
                        }
                    }
                ]
            });
        },
        error: function (result) {
            alert(result.responseText);
        }
    });
}

    function GetMonthName(monthNumber) {
        var months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
        return months[monthNumber - 1];
    }

    function GetTotalLeaveBalance() {
        $.ajax({
            url: "@Url.Action("GetTotalLeaveBalanaceList", "Leave")",
            contentType: 'application/json',
             type: "GET",
            success: function (data) {
                $('#TotalLeaveBalanceTable').DataTable({
                    destroy: true,
                    data: data,
                    searching: false,
                    paging: false,
                    info: false ,
                    order: [[0, 'desc']],
                    "columns": [
                        {
                            "data": "SickLeave",
                            "render": function (data, type, row) {

                                var SickLeave = TotalSickLeaveCount(data);
                                return "<span>" + SickLeave + "</span>"

                            }
                        },
                        {
                            "data": "PersonalLeave",
                            "render": function (data, type, row) {

                                var personalLeave = TotalPersonalLeaveCount(data);
                                return "<span>" + personalLeave + "</span>"

                            }
                        }
                    ]
                });
            },
            error: function (result) {
                alert(result.responseText);
            }
        });
    }

     function GetPastLeaveBalance() {
        $.ajax({
            url: "@Url.Action("GetTotalPastBalanaceList", "Leave")",
            contentType: 'application/json',
             type: "GET",
            success: function (data) {
                if (data.length > 0) {
                    $("#PersonalLeave").val(data[0].PersonalLeave);
                    $("#SickLeave").val(data[0].SickLeave);
                }
            },
            error: function (result) {
                alert(result.responseText);
            }
        });
    }

    function GetLeaveBalance() {
         $.ajax({
             url: '/Leave/GetUserLeaveBalance',
             contentType: 'application/json',
             type: "GET",
             success: function (data) {
                 
                 $('#TotalLeaveBalanceTable').DataTable({
                     destroy: true,
                     data: data,
                     searching: false,
                     paging: false,
                     info: false,
                     order: [[0, 'desc']],
                     "columns": [
                         {
                             "data": "SickLeave",
                             "render": function (data, type, row) {
                                 var slAfterBreak = CountSickLeave(data,row.OnBreak,row.BreakMonth);
                                 return "<span>" + slAfterBreak + "</span>"

                             }
                         },
                         {
                             "data": "PaidLeave",
                             "render": function (data, type, row) {
                                 var plAfterBreak = CountPaidLeave(data, row.OnBreak, row.BreakMonth);
                                 return "<span>" + plAfterBreak + "</span>"

                             }
                         }
                     ]
                 });
             },
             error: function (result) {
                 alert(result.responseText);
             }
         });
    }

    function CountSickLeave(sl,userbreak,breakMonth) {
        if (!userbreak) {
            var slPermonth = 0.5 * breakMonth;  // Adjust slPermonth based on breakMonth

            var totalsl = sl - slPermonth;
            return totalsl;
        } else {
            return sl;
        }
    }

    function CountPaidLeave(pl, userbreak, breakMonth) {
        if (!userbreak) {
            var totalpl = pl - breakMonth;
            return totalpl;
        } else {
            return pl;
        }
    }

</script>